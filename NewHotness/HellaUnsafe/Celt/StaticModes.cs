using static HellaUnsafe.Common.CRuntime;
using static HellaUnsafe.Common.NativeArray;
using static HellaUnsafe.Celt.KissFFT;

namespace HellaUnsafe.Celt
{
    internal static unsafe class StaticModes
    {
        internal static readonly kiss_twiddle_cpx* fft_twiddles48000_960 /*[480]*/ = 
            (kiss_twiddle_cpx*)AllocateGlobal(new float[] /*[960]*/ {
            1.0000000f, -0.0000000f, 0.99991433f, -0.013089596f,
            0.99965732f, -0.026176948f, 0.99922904f, -0.039259816f,
            0.99862953f, -0.052335956f, 0.99785892f, -0.065403129f,
            0.99691733f, -0.078459096f, 0.99580493f, -0.091501619f,
            0.99452190f, -0.10452846f, 0.99306846f, -0.11753740f,
            0.99144486f, -0.13052619f, 0.98965139f, -0.14349262f,
            0.98768834f, -0.15643447f, 0.98555606f, -0.16934950f,
            0.98325491f, -0.18223553f, 0.98078528f, -0.19509032f,
            0.97814760f, -0.20791169f, 0.97534232f, -0.22069744f,
            0.97236992f, -0.23344536f, 0.96923091f, -0.24615329f,
            0.96592583f, -0.25881905f, 0.96245524f, -0.27144045f,
            0.95881973f, -0.28401534f, 0.95501994f, -0.29654157f,
            0.95105652f, -0.30901699f, 0.94693013f, -0.32143947f,
            0.94264149f, -0.33380686f, 0.93819134f, -0.34611706f,
            0.93358043f, -0.35836795f, 0.92880955f, -0.37055744f,
            0.92387953f, -0.38268343f, 0.91879121f, -0.39474386f,
            0.91354546f, -0.40673664f, 0.90814317f, -0.41865974f,
            0.90258528f, -0.43051110f, 0.89687274f, -0.44228869f,
            0.89100652f, -0.45399050f, 0.88498764f, -0.46561452f,
            0.87881711f, -0.47715876f, 0.87249601f, -0.48862124f,
            0.86602540f, -0.50000000f, 0.85940641f, -0.51129309f,
            0.85264016f, -0.52249856f, 0.84572782f, -0.53361452f,
            0.83867057f, -0.54463904f, 0.83146961f, -0.55557023f,
            0.82412619f, -0.56640624f, 0.81664156f, -0.57714519f,
            0.80901699f, -0.58778525f, 0.80125381f, -0.59832460f,
            0.79335334f, -0.60876143f, 0.78531693f, -0.61909395f,
            0.77714596f, -0.62932039f, 0.76884183f, -0.63943900f,
            0.76040597f, -0.64944805f, 0.75183981f, -0.65934582f,
            0.74314483f, -0.66913061f, 0.73432251f, -0.67880075f,
            0.72537437f, -0.68835458f, 0.71630194f, -0.69779046f,
            0.70710678f, -0.70710678f, 0.69779046f, -0.71630194f,
            0.68835458f, -0.72537437f, 0.67880075f, -0.73432251f,
            0.66913061f, -0.74314483f, 0.65934582f, -0.75183981f,
            0.64944805f, -0.76040597f, 0.63943900f, -0.76884183f,
            0.62932039f, -0.77714596f, 0.61909395f, -0.78531693f,
            0.60876143f, -0.79335334f, 0.59832460f, -0.80125381f,
            0.58778525f, -0.80901699f, 0.57714519f, -0.81664156f,
            0.56640624f, -0.82412619f, 0.55557023f, -0.83146961f,
            0.54463904f, -0.83867057f, 0.53361452f, -0.84572782f,
            0.52249856f, -0.85264016f, 0.51129309f, -0.85940641f,
            0.50000000f, -0.86602540f, 0.48862124f, -0.87249601f,
            0.47715876f, -0.87881711f, 0.46561452f, -0.88498764f,
            0.45399050f, -0.89100652f, 0.44228869f, -0.89687274f,
            0.43051110f, -0.90258528f, 0.41865974f, -0.90814317f,
            0.40673664f, -0.91354546f, 0.39474386f, -0.91879121f,
            0.38268343f, -0.92387953f, 0.37055744f, -0.92880955f,
            0.35836795f, -0.93358043f, 0.34611706f, -0.93819134f,
            0.33380686f, -0.94264149f, 0.32143947f, -0.94693013f,
            0.30901699f, -0.95105652f, 0.29654157f, -0.95501994f,
            0.28401534f, -0.95881973f, 0.27144045f, -0.96245524f,
            0.25881905f, -0.96592583f, 0.24615329f, -0.96923091f,
            0.23344536f, -0.97236992f, 0.22069744f, -0.97534232f,
            0.20791169f, -0.97814760f, 0.19509032f, -0.98078528f,
            0.18223553f, -0.98325491f, 0.16934950f, -0.98555606f,
            0.15643447f, -0.98768834f, 0.14349262f, -0.98965139f,
            0.13052619f, -0.99144486f, 0.11753740f, -0.99306846f,
            0.10452846f, -0.99452190f, 0.091501619f, -0.99580493f,
            0.078459096f, -0.99691733f, 0.065403129f, -0.99785892f,
            0.052335956f, -0.99862953f, 0.039259816f, -0.99922904f,
            0.026176948f, -0.99965732f, 0.013089596f, -0.99991433f,
            6.1230318e-17f, -1.0000000f, -0.013089596f, -0.99991433f,
            -0.026176948f, -0.99965732f, -0.039259816f, -0.99922904f,
            -0.052335956f, -0.99862953f, -0.065403129f, -0.99785892f,
            -0.078459096f, -0.99691733f, -0.091501619f, -0.99580493f,
            -0.10452846f, -0.99452190f, -0.11753740f, -0.99306846f,
            -0.13052619f, -0.99144486f, -0.14349262f, -0.98965139f,
            -0.15643447f, -0.98768834f, -0.16934950f, -0.98555606f,
            -0.18223553f, -0.98325491f, -0.19509032f, -0.98078528f,
            -0.20791169f, -0.97814760f, -0.22069744f, -0.97534232f,
            -0.23344536f, -0.97236992f, -0.24615329f, -0.96923091f,
            -0.25881905f, -0.96592583f, -0.27144045f, -0.96245524f,
            -0.28401534f, -0.95881973f, -0.29654157f, -0.95501994f,
            -0.30901699f, -0.95105652f, -0.32143947f, -0.94693013f,
            -0.33380686f, -0.94264149f, -0.34611706f, -0.93819134f,
            -0.35836795f, -0.93358043f, -0.37055744f, -0.92880955f,
            -0.38268343f, -0.92387953f, -0.39474386f, -0.91879121f,
            -0.40673664f, -0.91354546f, -0.41865974f, -0.90814317f,
            -0.43051110f, -0.90258528f, -0.44228869f, -0.89687274f,
            -0.45399050f, -0.89100652f, -0.46561452f, -0.88498764f,
            -0.47715876f, -0.87881711f, -0.48862124f, -0.87249601f,
            -0.50000000f, -0.86602540f, -0.51129309f, -0.85940641f,
            -0.52249856f, -0.85264016f, -0.53361452f, -0.84572782f,
            -0.54463904f, -0.83867057f, -0.55557023f, -0.83146961f,
            -0.56640624f, -0.82412619f, -0.57714519f, -0.81664156f,
            -0.58778525f, -0.80901699f, -0.59832460f, -0.80125381f,
            -0.60876143f, -0.79335334f, -0.61909395f, -0.78531693f,
            -0.62932039f, -0.77714596f, -0.63943900f, -0.76884183f,
            -0.64944805f, -0.76040597f, -0.65934582f, -0.75183981f,
            -0.66913061f, -0.74314483f, -0.67880075f, -0.73432251f,
            -0.68835458f, -0.72537437f, -0.69779046f, -0.71630194f,
            -0.70710678f, -0.70710678f, -0.71630194f, -0.69779046f,
            -0.72537437f, -0.68835458f, -0.73432251f, -0.67880075f,
            -0.74314483f, -0.66913061f, -0.75183981f, -0.65934582f,
            -0.76040597f, -0.64944805f, -0.76884183f, -0.63943900f,
            -0.77714596f, -0.62932039f, -0.78531693f, -0.61909395f,
            -0.79335334f, -0.60876143f, -0.80125381f, -0.59832460f,
            -0.80901699f, -0.58778525f, -0.81664156f, -0.57714519f,
            -0.82412619f, -0.56640624f, -0.83146961f, -0.55557023f,
            -0.83867057f, -0.54463904f, -0.84572782f, -0.53361452f,
            -0.85264016f, -0.52249856f, -0.85940641f, -0.51129309f,
            -0.86602540f, -0.50000000f, -0.87249601f, -0.48862124f,
            -0.87881711f, -0.47715876f, -0.88498764f, -0.46561452f,
            -0.89100652f, -0.45399050f, -0.89687274f, -0.44228869f,
            -0.90258528f, -0.43051110f, -0.90814317f, -0.41865974f,
            -0.91354546f, -0.40673664f, -0.91879121f, -0.39474386f,
            -0.92387953f, -0.38268343f, -0.92880955f, -0.37055744f,
            -0.93358043f, -0.35836795f, -0.93819134f, -0.34611706f,
            -0.94264149f, -0.33380686f, -0.94693013f, -0.32143947f,
            -0.95105652f, -0.30901699f, -0.95501994f, -0.29654157f,
            -0.95881973f, -0.28401534f, -0.96245524f, -0.27144045f,
            -0.96592583f, -0.25881905f, -0.96923091f, -0.24615329f,
            -0.97236992f, -0.23344536f, -0.97534232f, -0.22069744f,
            -0.97814760f, -0.20791169f, -0.98078528f, -0.19509032f,
            -0.98325491f, -0.18223553f, -0.98555606f, -0.16934950f,
            -0.98768834f, -0.15643447f, -0.98965139f, -0.14349262f,
            -0.99144486f, -0.13052619f, -0.99306846f, -0.11753740f,
            -0.99452190f, -0.10452846f, -0.99580493f, -0.091501619f,
            -0.99691733f, -0.078459096f, -0.99785892f, -0.065403129f,
            -0.99862953f, -0.052335956f, -0.99922904f, -0.039259816f,
            -0.99965732f, -0.026176948f, -0.99991433f, -0.013089596f,
            -1.0000000f, -1.2246064e-16f, -0.99991433f, 0.013089596f,
            -0.99965732f, 0.026176948f, -0.99922904f, 0.039259816f,
            -0.99862953f, 0.052335956f, -0.99785892f, 0.065403129f,
            -0.99691733f, 0.078459096f, -0.99580493f, 0.091501619f,
            -0.99452190f, 0.10452846f, -0.99306846f, 0.11753740f,
            -0.99144486f, 0.13052619f, -0.98965139f, 0.14349262f,
            -0.98768834f, 0.15643447f, -0.98555606f, 0.16934950f,
            -0.98325491f, 0.18223553f, -0.98078528f, 0.19509032f,
            -0.97814760f, 0.20791169f, -0.97534232f, 0.22069744f,
            -0.97236992f, 0.23344536f, -0.96923091f, 0.24615329f,
            -0.96592583f, 0.25881905f, -0.96245524f, 0.27144045f,
            -0.95881973f, 0.28401534f, -0.95501994f, 0.29654157f,
            -0.95105652f, 0.30901699f, -0.94693013f, 0.32143947f,
            -0.94264149f, 0.33380686f, -0.93819134f, 0.34611706f,
            -0.93358043f, 0.35836795f, -0.92880955f, 0.37055744f,
            -0.92387953f, 0.38268343f, -0.91879121f, 0.39474386f,
            -0.91354546f, 0.40673664f, -0.90814317f, 0.41865974f,
            -0.90258528f, 0.43051110f, -0.89687274f, 0.44228869f,
            -0.89100652f, 0.45399050f, -0.88498764f, 0.46561452f,
            -0.87881711f, 0.47715876f, -0.87249601f, 0.48862124f,
            -0.86602540f, 0.50000000f, -0.85940641f, 0.51129309f,
            -0.85264016f, 0.52249856f, -0.84572782f, 0.53361452f,
            -0.83867057f, 0.54463904f, -0.83146961f, 0.55557023f,
            -0.82412619f, 0.56640624f, -0.81664156f, 0.57714519f,
            -0.80901699f, 0.58778525f, -0.80125381f, 0.59832460f,
            -0.79335334f, 0.60876143f, -0.78531693f, 0.61909395f,
            -0.77714596f, 0.62932039f, -0.76884183f, 0.63943900f,
            -0.76040597f, 0.64944805f, -0.75183981f, 0.65934582f,
            -0.74314483f, 0.66913061f, -0.73432251f, 0.67880075f,
            -0.72537437f, 0.68835458f, -0.71630194f, 0.69779046f,
            -0.70710678f, 0.70710678f, -0.69779046f, 0.71630194f,
            -0.68835458f, 0.72537437f, -0.67880075f, 0.73432251f,
            -0.66913061f, 0.74314483f, -0.65934582f, 0.75183981f,
            -0.64944805f, 0.76040597f, -0.63943900f, 0.76884183f,
            -0.62932039f, 0.77714596f, -0.61909395f, 0.78531693f,
            -0.60876143f, 0.79335334f, -0.59832460f, 0.80125381f,
            -0.58778525f, 0.80901699f, -0.57714519f, 0.81664156f,
            -0.56640624f, 0.82412619f, -0.55557023f, 0.83146961f,
            -0.54463904f, 0.83867057f, -0.53361452f, 0.84572782f,
            -0.52249856f, 0.85264016f, -0.51129309f, 0.85940641f,
            -0.50000000f, 0.86602540f, -0.48862124f, 0.87249601f,
            -0.47715876f, 0.87881711f, -0.46561452f, 0.88498764f,
            -0.45399050f, 0.89100652f, -0.44228869f, 0.89687274f,
            -0.43051110f, 0.90258528f, -0.41865974f, 0.90814317f,
            -0.40673664f, 0.91354546f, -0.39474386f, 0.91879121f,
            -0.38268343f, 0.92387953f, -0.37055744f, 0.92880955f,
            -0.35836795f, 0.93358043f, -0.34611706f, 0.93819134f,
            -0.33380686f, 0.94264149f, -0.32143947f, 0.94693013f,
            -0.30901699f, 0.95105652f, -0.29654157f, 0.95501994f,
            -0.28401534f, 0.95881973f, -0.27144045f, 0.96245524f,
            -0.25881905f, 0.96592583f, -0.24615329f, 0.96923091f,
            -0.23344536f, 0.97236992f, -0.22069744f, 0.97534232f,
            -0.20791169f, 0.97814760f, -0.19509032f, 0.98078528f,
            -0.18223553f, 0.98325491f, -0.16934950f, 0.98555606f,
            -0.15643447f, 0.98768834f, -0.14349262f, 0.98965139f,
            -0.13052619f, 0.99144486f, -0.11753740f, 0.99306846f,
            -0.10452846f, 0.99452190f, -0.091501619f, 0.99580493f,
            -0.078459096f, 0.99691733f, -0.065403129f, 0.99785892f,
            -0.052335956f, 0.99862953f, -0.039259816f, 0.99922904f,
            -0.026176948f, 0.99965732f, -0.013089596f, 0.99991433f,
            -1.8369095e-16f, 1.0000000f, 0.013089596f, 0.99991433f,
            0.026176948f, 0.99965732f, 0.039259816f, 0.99922904f,
            0.052335956f, 0.99862953f, 0.065403129f, 0.99785892f,
            0.078459096f, 0.99691733f, 0.091501619f, 0.99580493f,
            0.10452846f, 0.99452190f, 0.11753740f, 0.99306846f,
            0.13052619f, 0.99144486f, 0.14349262f, 0.98965139f,
            0.15643447f, 0.98768834f, 0.16934950f, 0.98555606f,
            0.18223553f, 0.98325491f, 0.19509032f, 0.98078528f,
            0.20791169f, 0.97814760f, 0.22069744f, 0.97534232f,
            0.23344536f, 0.97236992f, 0.24615329f, 0.96923091f,
            0.25881905f, 0.96592583f, 0.27144045f, 0.96245524f,
            0.28401534f, 0.95881973f, 0.29654157f, 0.95501994f,
            0.30901699f, 0.95105652f, 0.32143947f, 0.94693013f,
            0.33380686f, 0.94264149f, 0.34611706f, 0.93819134f,
            0.35836795f, 0.93358043f, 0.37055744f, 0.92880955f,
            0.38268343f, 0.92387953f, 0.39474386f, 0.91879121f,
            0.40673664f, 0.91354546f, 0.41865974f, 0.90814317f,
            0.43051110f, 0.90258528f, 0.44228869f, 0.89687274f,
            0.45399050f, 0.89100652f, 0.46561452f, 0.88498764f,
            0.47715876f, 0.87881711f, 0.48862124f, 0.87249601f,
            0.50000000f, 0.86602540f, 0.51129309f, 0.85940641f,
            0.52249856f, 0.85264016f, 0.53361452f, 0.84572782f,
            0.54463904f, 0.83867057f, 0.55557023f, 0.83146961f,
            0.56640624f, 0.82412619f, 0.57714519f, 0.81664156f,
            0.58778525f, 0.80901699f, 0.59832460f, 0.80125381f,
            0.60876143f, 0.79335334f, 0.61909395f, 0.78531693f,
            0.62932039f, 0.77714596f, 0.63943900f, 0.76884183f,
            0.64944805f, 0.76040597f, 0.65934582f, 0.75183981f,
            0.66913061f, 0.74314483f, 0.67880075f, 0.73432251f,
            0.68835458f, 0.72537437f, 0.69779046f, 0.71630194f,
            0.70710678f, 0.70710678f, 0.71630194f, 0.69779046f,
            0.72537437f, 0.68835458f, 0.73432251f, 0.67880075f,
            0.74314483f, 0.66913061f, 0.75183981f, 0.65934582f,
            0.76040597f, 0.64944805f, 0.76884183f, 0.63943900f,
            0.77714596f, 0.62932039f, 0.78531693f, 0.61909395f,
            0.79335334f, 0.60876143f, 0.80125381f, 0.59832460f,
            0.80901699f, 0.58778525f, 0.81664156f, 0.57714519f,
            0.82412619f, 0.56640624f, 0.83146961f, 0.55557023f,
            0.83867057f, 0.54463904f, 0.84572782f, 0.53361452f,
            0.85264016f, 0.52249856f, 0.85940641f, 0.51129309f,
            0.86602540f, 0.50000000f, 0.87249601f, 0.48862124f,
            0.87881711f, 0.47715876f, 0.88498764f, 0.46561452f,
            0.89100652f, 0.45399050f, 0.89687274f, 0.44228869f,
            0.90258528f, 0.43051110f, 0.90814317f, 0.41865974f,
            0.91354546f, 0.40673664f, 0.91879121f, 0.39474386f,
            0.92387953f, 0.38268343f, 0.92880955f, 0.37055744f,
            0.93358043f, 0.35836795f, 0.93819134f, 0.34611706f,
            0.94264149f, 0.33380686f, 0.94693013f, 0.32143947f,
            0.95105652f, 0.30901699f, 0.95501994f, 0.29654157f,
            0.95881973f, 0.28401534f, 0.96245524f, 0.27144045f,
            0.96592583f, 0.25881905f, 0.96923091f, 0.24615329f,
            0.97236992f, 0.23344536f, 0.97534232f, 0.22069744f,
            0.97814760f, 0.20791169f, 0.98078528f, 0.19509032f,
            0.98325491f, 0.18223553f, 0.98555606f, 0.16934950f,
            0.98768834f, 0.15643447f, 0.98965139f, 0.14349262f,
            0.99144486f, 0.13052619f, 0.99306846f, 0.11753740f,
            0.99452190f, 0.10452846f, 0.99580493f, 0.091501619f,
            0.99691733f, 0.078459096f, 0.99785892f, 0.065403129f,
            0.99862953f, 0.052335956f, 0.99922904f, 0.039259816f,
            0.99965732f, 0.026176948f, 0.99991433f, 0.013089596f,
        });

        internal static readonly short* fft_bitrev480 = AllocateGlobal(new short[] /*[480]*/ {
            0, 96, 192, 288, 384, 32, 128, 224, 320, 416, 64, 160, 256, 352, 448,
            8, 104, 200, 296, 392, 40, 136, 232, 328, 424, 72, 168, 264, 360, 456,
            16, 112, 208, 304, 400, 48, 144, 240, 336, 432, 80, 176, 272, 368, 464,
            24, 120, 216, 312, 408, 56, 152, 248, 344, 440, 88, 184, 280, 376, 472,
            4, 100, 196, 292, 388, 36, 132, 228, 324, 420, 68, 164, 260, 356, 452,
            12, 108, 204, 300, 396, 44, 140, 236, 332, 428, 76, 172, 268, 364, 460,
            20, 116, 212, 308, 404, 52, 148, 244, 340, 436, 84, 180, 276, 372, 468,
            28, 124, 220, 316, 412, 60, 156, 252, 348, 444, 92, 188, 284, 380, 476,
            1, 97, 193, 289, 385, 33, 129, 225, 321, 417, 65, 161, 257, 353, 449,
            9, 105, 201, 297, 393, 41, 137, 233, 329, 425, 73, 169, 265, 361, 457,
            17, 113, 209, 305, 401, 49, 145, 241, 337, 433, 81, 177, 273, 369, 465,
            25, 121, 217, 313, 409, 57, 153, 249, 345, 441, 89, 185, 281, 377, 473,
            5, 101, 197, 293, 389, 37, 133, 229, 325, 421, 69, 165, 261, 357, 453,
            13, 109, 205, 301, 397, 45, 141, 237, 333, 429, 77, 173, 269, 365, 461,
            21, 117, 213, 309, 405, 53, 149, 245, 341, 437, 85, 181, 277, 373, 469,
            29, 125, 221, 317, 413, 61, 157, 253, 349, 445, 93, 189, 285, 381, 477,
            2, 98, 194, 290, 386, 34, 130, 226, 322, 418, 66, 162, 258, 354, 450,
            10, 106, 202, 298, 394, 42, 138, 234, 330, 426, 74, 170, 266, 362, 458,
            18, 114, 210, 306, 402, 50, 146, 242, 338, 434, 82, 178, 274, 370, 466,
            26, 122, 218, 314, 410, 58, 154, 250, 346, 442, 90, 186, 282, 378, 474,
            6, 102, 198, 294, 390, 38, 134, 230, 326, 422, 70, 166, 262, 358, 454,
            14, 110, 206, 302, 398, 46, 142, 238, 334, 430, 78, 174, 270, 366, 462,
            22, 118, 214, 310, 406, 54, 150, 246, 342, 438, 86, 182, 278, 374, 470,
            30, 126, 222, 318, 414, 62, 158, 254, 350, 446, 94, 190, 286, 382, 478,
            3, 99, 195, 291, 387, 35, 131, 227, 323, 419, 67, 163, 259, 355, 451,
            11, 107, 203, 299, 395, 43, 139, 235, 331, 427, 75, 171, 267, 363, 459,
            19, 115, 211, 307, 403, 51, 147, 243, 339, 435, 83, 179, 275, 371, 467,
            27, 123, 219, 315, 411, 59, 155, 251, 347, 443, 91, 187, 283, 379, 475,
            7, 103, 199, 295, 391, 39, 135, 231, 327, 423, 71, 167, 263, 359, 455,
            15, 111, 207, 303, 399, 47, 143, 239, 335, 431, 79, 175, 271, 367, 463,
            23, 119, 215, 311, 407, 55, 151, 247, 343, 439, 87, 183, 279, 375, 471,
            31, 127, 223, 319, 415, 63, 159, 255, 351, 447, 95, 191, 287, 383, 479,
        });

        internal static readonly short* fft_bitrev240 = AllocateGlobal(new short[] /*[240]*/ {
            0, 48, 96, 144, 192, 16, 64, 112, 160, 208, 32, 80, 128, 176, 224,
            4, 52, 100, 148, 196, 20, 68, 116, 164, 212, 36, 84, 132, 180, 228,
            8, 56, 104, 152, 200, 24, 72, 120, 168, 216, 40, 88, 136, 184, 232,
            12, 60, 108, 156, 204, 28, 76, 124, 172, 220, 44, 92, 140, 188, 236,
            1, 49, 97, 145, 193, 17, 65, 113, 161, 209, 33, 81, 129, 177, 225,
            5, 53, 101, 149, 197, 21, 69, 117, 165, 213, 37, 85, 133, 181, 229,
            9, 57, 105, 153, 201, 25, 73, 121, 169, 217, 41, 89, 137, 185, 233,
            13, 61, 109, 157, 205, 29, 77, 125, 173, 221, 45, 93, 141, 189, 237,
            2, 50, 98, 146, 194, 18, 66, 114, 162, 210, 34, 82, 130, 178, 226,
            6, 54, 102, 150, 198, 22, 70, 118, 166, 214, 38, 86, 134, 182, 230,
            10, 58, 106, 154, 202, 26, 74, 122, 170, 218, 42, 90, 138, 186, 234,
            14, 62, 110, 158, 206, 30, 78, 126, 174, 222, 46, 94, 142, 190, 238,
            3, 51, 99, 147, 195, 19, 67, 115, 163, 211, 35, 83, 131, 179, 227,
            7, 55, 103, 151, 199, 23, 71, 119, 167, 215, 39, 87, 135, 183, 231,
            11, 59, 107, 155, 203, 27, 75, 123, 171, 219, 43, 91, 139, 187, 235,
            15, 63, 111, 159, 207, 31, 79, 127, 175, 223, 47, 95, 143, 191, 239,
        });

        internal static readonly short* fft_bitrev120 = AllocateGlobal(new short[] /*[120]*/ {
            0, 24, 48, 72, 96, 8, 32, 56, 80, 104, 16, 40, 64, 88, 112,
            4, 28, 52, 76, 100, 12, 36, 60, 84, 108, 20, 44, 68, 92, 116,
            1, 25, 49, 73, 97, 9, 33, 57, 81, 105, 17, 41, 65, 89, 113,
            5, 29, 53, 77, 101, 13, 37, 61, 85, 109, 21, 45, 69, 93, 117,
            2, 26, 50, 74, 98, 10, 34, 58, 82, 106, 18, 42, 66, 90, 114,
            6, 30, 54, 78, 102, 14, 38, 62, 86, 110, 22, 46, 70, 94, 118,
            3, 27, 51, 75, 99, 11, 35, 59, 83, 107, 19, 43, 67, 91, 115,
            7, 31, 55, 79, 103, 15, 39, 63, 87, 111, 23, 47, 71, 95, 119,
        });

        internal static readonly short* fft_bitrev60 = AllocateGlobal(new short[] /*[60]*/ {
            0, 12, 24, 36, 48, 4, 16, 28, 40, 52, 8, 20, 32, 44, 56,
            1, 13, 25, 37, 49, 5, 17, 29, 41, 53, 9, 21, 33, 45, 57,
            2, 14, 26, 38, 50, 6, 18, 30, 42, 54, 10, 22, 34, 46, 58,
            3, 15, 27, 39, 51, 7, 19, 31, 43, 55, 11, 23, 35, 47, 59,
        });

        internal static readonly kiss_fft_state fft_state48000_960_0 = new kiss_fft_state(
            480,    /* nfft */
            0.002083333f,   /* scale */
            -1,     /* shift */
            new short[] { 5, 96, 3, 32, 4, 8, 2, 4, 4, 1, 0, 0, 0, 0, 0, 0, },    /* factors */
            fft_bitrev480,  /* bitrev */
            fft_twiddles48000_960  /* bitrev */
        );

        internal static readonly kiss_fft_state fft_state48000_960_1 = new kiss_fft_state(
            240,    /* nfft */
            0.004166667f,   /* scale */
            1,      /* shift */
            new short[] {5, 48, 3, 16, 4, 4, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, },    /* factors */
            fft_bitrev240,  /* bitrev */
            fft_twiddles48000_960  /* bitrev */
        );

        internal static readonly kiss_fft_state fft_state48000_960_2 = new kiss_fft_state(
            120,    /* nfft */
            0.008333333f,   /* scale */
            2,      /* shift */
            new short[] {5, 24, 3, 8, 2, 4, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, },    /* factors */
            fft_bitrev120,  /* bitrev */
            fft_twiddles48000_960  /* bitrev */
        );

        internal static readonly kiss_fft_state fft_state48000_960_3 = new kiss_fft_state(
            60,     /* nfft */
            0.016666667f,   /* scale */
            3,      /* shift */
            new short[] {5, 12, 3, 4, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },    /* factors */
            fft_bitrev60,   /* bitrev */
            fft_twiddles48000_960  /* bitrev */
        );
    }
}
